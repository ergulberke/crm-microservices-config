spring:
  application:
    name: analytics-service
  datasource:
    url: jdbc:postgresql://localhost:5432/analytics_service
    username: postgres
    password: test
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  cloud:
    stream:
      defaultBinder: kafka
      function:
        definition: planCreatedFunction;customerCreatedFunction;contractCreatedFunction
      bindings:
        planCreatedFunction-in-0:
          destination: plan-topic
          content-type: application/json
          group: analytics-service-group
        customerCreatedFunction-in-0:
          destination: customer-topic
          content-type: application/json
          group: analytics-service-group
        contractCreatedFunction-in-0:
          destination: contract-topic
          content-type: application/json
          group: analytics-service-group
        billCreatedFunction-in-0:
          destination: bill-topic
          content-type: application/json
          group: analytics-service-group
        userLoginFunction-in-0:
          destination: user-topic
          content-type: application/json
          group: analytics-service-group
        
      kafka:
        binder:
          brokers: localhost
          defaultBrokerPort: 9092
          configuration:
            key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
            value.deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
            spring.json.trusted.packages: "com.turkcell.analytics_service.event"

server:
  port: 8083

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8888/eureka
    register-with-eureka: true
    fetch-registry: true
  instance:
    prefer-ip-address: true

analytics:
  reporting:
    cron: "0 0 0 * * *" 
